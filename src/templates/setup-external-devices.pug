extends _modules/Template-2col.pug

block variables
  -var pagename   = 'Setup - External Devices';
  -var section    = 'Setup';
  -var subsection = 'External Devices';

block secondaryMenu

block content
  div.content-block
    h5 Serial Devices
    p Make sure your displays are off
    div
      ul.list-unstyled
        li.col2
          span.listlabel Serial Scan:
          div
            button#scan.serialControl Start
        li.col2
          span.listlabel Scan Results:
          div
            button#scanResults.serialControl View
        li.col2
          span.listlabel Last Scan:
          div
            input#fileDate.serialControl(value='View', style='width:98%;text-align:center;', readonly='')
        li.col2even
          div
            button#on.serialControl Displays On
          div
            button#off.serialControl Displays Off
        li.col2even
          div
            button#input1.serialControl Switcher Input 1
          div
            button#input2.serialControl Switcher Input 2
  div.content-block
    h5 Light Configuration
    div
      ul.list-unstyled
        li.col2
          span.listlabel Enable:
          div
            input#Enabled.lights(type="checkbox" value="")
        li.col2
          span.listlabel OCC Sensor Timeout:
          div
            input#occSensorTimeoutNew.lights(type="text"  placeholder="Sensor Timeout" value="")
        li.col2
          span.listlabel Device Address:
          div
            input#URL.lights(type="text"  placeholder="URL" value="")
        li.col2
          span.listlabel Type:
          div
          label
            select.light#typeNew
              option(value="enocean") EnOcean
              option(value="molex") Molex
        li.col2
          div
          label
            input.lights#isSwitchNew(type="checkbox" value="")
            span.listlabel Is a Switch
        li.col2
          div
          label
            input.lights#isInteriorNew(type="checkbox" value="")  
            span.listlabel Is Interior
        li.col2
          div
          label
            input.lights#useColorTempNew(type="checkbox" value="")
            span.listlabel Use Color Temp
        li.col2
          div
          label
            input.lights#usePIRNew(type="checkbox" value="")
            span.listlabel Use PIR
        li.col2
          div
          label
            input.lights#useIndicatorNew(type="checkbox" value="")
            span.listlabel Is Indicator
        lili.col2
          div
          button.lights#add Add
    //- div
    //-   table
    //-     h5 Device List
    #cLights
      table.lights(style='width:100%;')
        caption(style='color:white;background-color:black;')
          strong Available Devices
        tr.lights
          th.lights(style='width:11%;') Type
          th.lights(style='width:19%;') URL
          th.lights(style='width:11%;') Is Switch
          th.lights(style='width:11%;') Is Interior
          th.lights(style='width:11%;') Use ColorTemp
          th.lights(style='width:11%;') Use PIR
          th.lights(style='width:11%;') Use Indicator
          th.lights(style='width:11%;') Options
        // $index $index $element
        tr
          td
            select#type.lightsupdate(data-ip='{{ $index }}', style='width:100%;', {{if='', eq='', $editable='', false}}disabled='', readonly{{end}}='')
              option(value='enocean') EnOcean
              option(value='molex') Molex
          td
            input#url.lightsupdate(type='text', placeholder='URL', style='width:100%;', value='{{ $index }}', readonly='')
          td
            label
              input#isSwitch.lightsupdate(data-ip='{{ $index }}', type='checkbox' checked='checked')
              | Is Switch
          td
            label
              input#isInterior.lightsupdate(data-ip='{{ $index }}', type='checkbox')
              | Is Interior
          td
            label
              input#useColorTemp.lightsupdate(data-ip='{{ $index }}', type='checkbox')
              | Use ColorTemp
          td
            label
              input#usePIR.lightsupdate(data-ip='{{ $index }}', type='checkbox')
              | Use PIR
          td
            label
              input#useIndicator.lightsupdate(data-ip='{{ $index }}', type='checkbox')
              | Use Indicator
          td(style='text-align:center;')
            button#on.lightscontrol(data-ip='{{ $index }}', style='width:30%', value='On') On
            button#off.lightscontrol(data-ip='{{ $index }}', style='width:30%', value='Off') Off
            button#delete.lightscontrol(data-ip='{{ $index }}', style='width:30%', value='Del') Del


block additionalScripts
  script.
    $(document).ready(function () {
      $('.lights').click(function () { // handle checkbox clicks
          //alert(this.id + "\n" + this.checked)
          switch (this.id) {
              case "add": // 'add' button clicked
                  var urlVal = $(".lights#URL").val();
                  if ( urlVal != "" ){
                      var jStr = '{"Type":"bool", "Class":"lighting", "Id":"newDevice","Data":"' + 
                          urlVal + 
                          '|' + $(".lights#typeNew").find(":selected").text() +
                          '|' + $(".lights#isSwitchNew").is(':checked') +
                          '|' + $(".lights#isInteriorNew").is(':checked') +
                          '|' + $(".lights#useColorTempNew").is(':checked') +
                          '|' + $(".lights#usePIRNew").is(':checked') +
                          '|' + $(".lights#useIndicatorNew").is(':checked') + 
                      '"}';
                      postUpdateLightingConfig(jStr, updateLightDevices);
                  }
                  break;
              case "Enabled":
                  var jStr = '{"Type":"bool", "Class":"lighting", "Id":"' + this.id +
                      '","Data":"' + this.checked + '"}';
                  postUpdateLightingConfig(jStr, dummy)
                  break;
              case "occSensorTimeoutNew":
                  var jStr = '{"Type":"bool", "Class":"lighting", "Id":"' + this.id +
                      '","Data":"' + this.value + '"}';
                  postUpdateLightingConfig(jStr, dummy)
                  break;
              default:
                  break;
          }
      });
      //$('#lightscontrol').on('click', ':button', function() {
      $(document).on('click', '.lightscontrol', function(){ 
      //$('.lightscontrol').click(function () { // handle checkbox clicks
          //alert(this.id + "\n" + this.checked)
          switch (this.id) {
              case "delete": // 'add' button clicked
                  var jStr = '{"Type":"bool", "Class":"lightscontrol", "Id":"' + this.id + '","Data":"' + $( this ).data("ip") + '"}';
                  lightingControl(jStr, updateLightDevices);
                  break;
              default:
                  var jStr = '{"Type":"bool", "Class":"lightscontrol", "Id":"' + this.id + '","Data":"' + $( this ).data("ip") + '"}';
                  lightingControl(jStr, dummy)
                  break;
          }
      });

      $(document).on('click', '.serialControl', function(){ // monitor #scan and #scanResults 
      //$('.lightscontrol').click(function () { // handle checkbox clicks
          //alert(this.id + "\n" + this.checked)
          switch (this.id) {
              case "scanResults": // 'Scan Results' button clicked
                  var jStr = '{"Type":"bool", "Class":"serialControl", "Id":"' + this.id + '"}';
                  serialControl(jStr, showSerialScanResults);
                  break;
              case "scan":
                  $('.serialControl#scan').prop("disabled",true);
                  var jStr = '{"Type":"bool", "Class":"serialControl", "Id":"' + this.id + '"}';
                  serialControl(jStr, dummy);
                  break
              default:
                  var jStr = '{"Type":"bool", "Class":"serialControl", "Id":"' + this.id + '"}';
                  serialControl(jStr, dummy);
                  break;
          }
      });

      $(".lights").keyup(function () { // handle string changes
          if (this.id != "URL"){
              var jStr = '{"Type":"bool", "Class":"lighting", "Id":"' + this.id +
                  '","Data":"' + this.value + '"}';
              postUpdateLightingConfig(jStr, dummy)
          }
      });

      $(document).on('change', '.lightsupdate', function(){ 
      //$('.lightsupdate').change(function() { // handle update clicks
          switch (this.id) {
              case "type":
                  // https://api.jquery.com/data/
                  var jStr = '{"Type":"bool", "Class":"lightsupdate", "Id":"' + 
                  this.id + '","Data":"' + this.value + '", "Ip":"' + $( this ).data("ip") + '"}';
                  break;
              default:
                  var jStr = '{"Type":"bool", "Class":"lightsupdate", "Id":"' + 
                  this.id + '","Data":"' + this.checked + '", "Ip":"' + $( this ).data("ip") + '"}';
                  break;
          }
          postUpdateLightingConfig(jStr, dummy)
      });

      $("#nav").load("/static/nav.html"); 
      $("#subNav").load("/static/setupNav.html"); 
      serialDeviceLastScanTime();
      setInterval(serialDeviceLastScanTime, 2000);
    });
    function serialControl(jStr, func){
        $.ajax({ 
            type: 'POST',
            url: 'serialControl',
            data: jStr,
            success: function (data)  { 
                func(data) 
            },
            contentType: "application/json; charset=utf-8",
            dataType: 'text'
        });
    }
    function showSerialScanResults(data){
        alert(JSON.stringify(data, null, 2));
        // $.ajax({ 
        //     type: 'POST',
        //     url: 'getLastSerialScanData',
        //     success: function (data)  { 
        //         alert(data); 
        //     },
        //     contentType: "application/json; charset=utf-8",
        //     dataType: 'text'
        // });
    }
    function serialDeviceLastScanTime(data){
        $.ajax({ 
            type: 'POST',
            url: 'getLastDeviceScanTime',
            success: function (data)  { 
                if (data != "No Info"){
                    if ($('.serialControl#fileDate').val(data) != data){
                        $('.serialControl#fileDate').val(data);
                        $('.serialControl#scan').prop("disabled",false); 
                    }
                }
            },
            contentType: "application/json; charset=utf-8",
            dataType: 'text'
        });
    }
    function updateLightDevices(data){
        console.log(JSON.stringify(data));
        //alert(data)
        //var j = $.parseJSON(data);
        //xvar j = jQuery.parseJSON( data );
        // for(var k in j) {
        //     console.log(k, result[k]);
        // }
        var ret = "";
        ret += `
            <table class="lights" style="width:100%;">
                <caption style="color:white;background-color:black;"><strong>Available Devices</strong></caption>
                <tr class="lights">
                    <th class="lights" style="width:11%;">Type</th>
                    <th class="lights" style="width:19%;">URL</th>
                    <th class="lights" style="width:11%;">Is Switch</th>
                    <th class="lights" style="width:11%;">Is Interior</th>
                    <th class="lights" style="width:11%;">Use ColorTemp</th>
                    <th class="lights" style="width:11%;">Use PIR</th>
                    <th class="lights" style="width:11%;">Use Indicator</th>
                    <th class="lights" style="width:11%;">Options</th>
                </tr>
        `;
        var tdType, tdURL, tdIsSwitch, tdIsInterior, tdUseColorTemp, tdUsePIR, tdUseIndicator, tdControl = "";
        for (var thisURL in data) {
            tdURL = '<td>';
            tdURL += '<input class="lightsupdate" id="url" type="text" placeholder="URL" style="width:100%;" value="' + thisURL + '" readonly>';
            tdURL += '</td>';
            for (var thisKey in data[thisURL]){
                thisData = data[thisURL][thisKey];
                //console.log(thisURL + "-" + thisKey + "-" + thisData);
                
                switch (thisKey){ // same as element id
                    case "type":
                        tdType = '<td>';
                        tdType += '<select class="lightsupdate" id="type" data-ip="' + thisURL + '" style="width:100%;">';
                        if (thisData == "EnOcean"){
                            tdType += '<option value="enocean" selected="">EnOcean</option>';
                        }else{
                            tdType += '<option value="enocean">EnOcean</option>';
                        }
                        if (thisData == "Molex"){
                            tdType += '<option value="molex" selected="">Molex</option>';
                        }else{
                            tdType += '<option value="molex">Molex</option>';
                        }
                        tdType += '</td>';
                        break;
                    case "isSwitch":
                        tdIsSwitch = '<td>';
                        if (thisData == true){
                            tdIsSwitch += '<label><input class="lightsupdate" id="isSwitch" data-ip="' + thisURL + '" type="checkbox" checked>Is Switch</label>';
                        }else{
                            tdIsSwitch += '<label><input class="lightsupdate" id="isSwitch" data-ip="' + thisURL + '" type="checkbox">Is Switch</label>';
                        }
                        tdIsSwitch += '</td>';
                        break;
                    case "isInterior":
                        tdIsInterior = '<td>';
                        if (thisData == true){
                            tdIsInterior += '<label><input class="lightsupdate" id="isInterior" data-ip="' + thisURL + '" type="checkbox" checked>Is Interior</label>';
                        }else{
                            tdIsInterior += '<label><input class="lightsupdate" id="isInterior" data-ip="' + thisURL + '" type="checkbox">Is Interior</label>';
                        }
                        tdIsInterior += '</td>';
                        break;
                    case "useColorTemp":
                        tdUseColorTemp = '<td>';
                        if (thisData == true){
                            tdUseColorTemp += '<label><input class="lightsupdate" id="useColorTemp" data-ip="' + thisURL + '" type="checkbox" checked>Use ColorTemp</label>';
                        }else{
                            tdUseColorTemp += '<label><input class="lightsupdate" id="useColorTemp" data-ip="' + thisURL + '" type="checkbox">Use ColorTemp</label>';
                        }
                        tdUseColorTemp += '</td>';
                        break;
                    case "usePIR":
                        tdUsePIR = '<td>';
                        if (thisData == true){
                            tdUsePIR += '<label><input class="lightsupdate" id="usePIR" data-ip="' + thisURL + '" type="checkbox" checked>Use PIR</label>';
                        }else{
                            tdUsePIR += '<label><input class="lightsupdate" id="usePIR" data-ip="' + thisURL + '" type="checkbox">Use PIR</label>';
                        }
                        tdUsePIR += '</td>';
                        break;
                    case "useIndicator":
                        tdUseIndicator = '<td>';
                        if (thisData == true){
                            tdUseIndicator += '<input class="lightsupdate" id="useIndicator" data-ip="' + thisURL + '" type="checkbox" checked>Use Indicator</label>';
                        }else{
                            tdUseIndicator += '<input class="lightsupdate" id="useIndicator" data-ip="' + thisURL + '" type="checkbox">Use Indicator</label>';
                        }
                        tdUseIndicator += '</td>';
                        break;
                    default: 
                        break;
                }
            }
            ret += "<tr>";
            ret += tdType + tdURL + tdIsSwitch + tdIsInterior + tdUseColorTemp + tdUsePIR + tdUseIndicator;
            ret += '<td style="text-align:center;">';
            ret += '<button class="lightscontrol" id="on" data-ip="' + thisURL + '" style="width:30%" value="On">On</button>&nbsp;';
            ret += '<button class="lightscontrol" id="off" data-ip="' + thisURL + '" style="width:30%" value="Off">Off</button>&nbsp;';
            ret += '<button class="lightscontrol" id="delete" data-ip="' + thisURL + '" style="width:30%" value="Del">Del</button>';
            ret += "</td>";
            ret += "</tr>";
        }
        ret += '</table>';
        console.log("\n" + tdURL + "\n")
        $('#cLights').html(ret);
        return ret;
    }
    function postUpdateLightingConfig(jStr, func){
        $.ajax({ 
            type: 'POST',
            url: 'updateLightingConfig',
            //data: JSON.stringify(jStr),
            data: jStr,
            //success: function (data) {(func(data)); },
            success: function (data)  { (func(data)); },
            //complete: function (data) {  alert(data); },
            contentType: "application/json; charset=utf-8",
            dataType: 'json'
        });
    }
    function serialControl(jStr, func){
        $.ajax({ 
            type: 'POST',
            url: 'serialControl',
            //data: JSON.stringify(jStr),
            data: jStr,
            //success: function (data) {(func(data)); },
            success: function (data)  { (func(data)); },
            //complete: function (data) {  alert(data); },
            contentType: "application/json; charset=utf-8",
            dataType: 'json'
        });
    }
    function lightingControl(jStr, func){
        $.ajax({ 
            type: 'POST',
            url: 'lightingControl',
            //data: JSON.stringify(jStr),
            data: jStr,
            //success: function (data) {(func(data)); },
            success: function (data)  { (updateLightDevices(data)); },
            //complete: function (data) {  alert(data); },
            contentType: "application/json; charset=utf-8",
            dataType: 'json'
        });
    }
    function dummy(){
        return
    }
    function clearStatus() {
        //$('#statusText').text() = ""
    }
    function result(status, data) {
        alert("something\n" + status + "\n" + data + "\n");
    }
